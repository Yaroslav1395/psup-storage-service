server:
  port: 8082
spring:
  application:
    name: STORAGE-SERVICE
  r2dbc:
    url: r2dbc:postgresql://localhost:5434/storage_db
    username: admin
    password: admin
  liquibase:
    enabled: true
    change-log: classpath:/db/main-changelog.xml
    default-schema: public
    url: jdbc:postgresql://localhost:5434/storage_db
    user: admin
    password: admin
resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 1s
        permitted-number-of-calls-in-half-open-state: 2
        automatic-transition-from-open-to-half-open-enabled: true
        record-exceptions:
          - java.io.IOException
          - java.net.ConnectException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.reactive.function.client.WebClientResponseException.InternalServerError
          - org.springframework.web.reactive.function.client.WebClientResponseException.ServiceUnavailable
        ignore-exceptions:
          - org.springframework.web.reactive.function.client.WebClientResponseException.BadRequest
          - org.springframework.web.reactive.function.client.WebClientResponseException.NotFound
          - org.springframework.web.reactive.function.client.WebClientResponseException.Unauthorized
          - org.springframework.web.reactive.function.client.WebClientResponseException.Forbidden
    instances:
      PRODUCT-SERVICE:
        base-config: default
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 1s
        retry-exceptions:
          - java.util.concurrent.TimeoutException
    instances:
      PRODUCT-SERVICE:
        base-config: default
  timelimiter:
    configs:
      default:
        timeout-duration: 2s
        cancel-running-future: true
    instances:
      PRODUCT-SERVICE:
        base-config: default
management:
  endpoints:
    web:
      exposure:
        include: '*'
  tracing:
    enabled: false
    sampling:
      probability: 0.0
logging:
  pattern:
    level: "%5p [${spring.application.name}, trace=%X{traceId:-}, span=%X{spanId:-}]"
  level:
    org.springframework.data.r2dbc: DEBUG
    io.github.resilience4j: DEBUG
    reactor.retry: DEBUG
    org.springframework.cloud.circuitbreaker: DEBUG
log:
  path: ${user.home}/Universal_Trade_Platform/logs/storage-service
product:
  service:
    base:
      url: ${PRODUCT_SERVICE_BASE_URL:http://localhost:8080}

